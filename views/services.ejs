<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Services Management</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <!-- SweetAlert2 CSS (optional, for default styling) -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <style>
    .section { margin-bottom: 40px; }
  </style>
</head>
<body>
<div class="container mt-4">
  <!-- Section 1: Manage Service Categories -->
  <div class="section">
    <h2>Service Categories</h2>
    <form id="categoryForm" class="form-inline mb-3">
      <input type="text" name="name" class="form-control mr-2" placeholder="Category Name" required>
      <button type="submit" class="btn btn-primary">Add Category</button>
    </form>
    <table class="table table-bordered" id="categoriesTable">
      <thead>
        <tr>
          <th>Category Name</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <!-- Categories will be loaded here -->
      </tbody>
    </table>
  </div>

  <!-- Section 2: Manage Services -->
  <div class="section">
    <h2>Add Service</h2>
    <form id="serviceForm">
      <div class="form-group">
        <label for="serviceCategory">Category</label>
        <select id="serviceCategory" name="category" class="form-control" required>
          <option value="">Select Category</option>
          <!-- Options loaded dynamically -->
        </select>
      </div>
      <div class="form-group">
        <label for="serviceName">Service Name</label>
        <input type="text" id="serviceName" name="serviceName" class="form-control" required>
      </div>
      <div class="form-group">
        <label for="weight">Weight</label>
        <input type="text" id="weight" name="weight" class="form-control" placeholder="e.g., 100mg or add text" required>
      </div>
      <div class="form-group">
        <label for="dosage">Dosage</label>
        <input type="text" id="dosage" name="dosage" class="form-control" placeholder="e.g., take 1 tablet twice daily" required>
      </div>
      <div class="form-group">
        <label for="price">Price (in Peso)</label>
        <input type="number" step="0.01" id="price" name="price" class="form-control" required>
      </div>
      <button type="submit" class="btn btn-primary">Add Service</button>
    </form>
  </div>

  <!-- Section 3: Services List -->
  <div class="section">
    <h2>Services List</h2>
    <div class="d-flex justify-content-between mb-3">
      <input type="text" id="serviceSearch" class="form-control w-50" placeholder="Search by service name">
      <select id="serviceCategoryFilter" class="form-control w-25">
        <option value="">All Categories</option>
        <!-- Category filter options loaded dynamically -->
      </select>
    </div>
    <table class="table table-bordered" id="servicesTable">
      <thead>
        <tr>
          <th>Category</th>
          <th>Service Name</th>
          <th>Weight</th>
          <th>Dosage</th>
          <th>Price</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <!-- Services will be loaded here -->
      </tbody>
    </table>
  </div>
</div>

<!-- Edit Service Modal -->
<div class="modal fade" id="editServiceModal" tabindex="-1" role="dialog" aria-labelledby="editServiceModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <form id="editServiceForm">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editServiceModalLabel">Edit Service</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <!-- Hidden field for service ID -->
          <input type="hidden" id="editServiceId" name="id">
          <div class="form-group">
            <label for="editServiceCategory">Category</label>
            <select class="form-control" id="editServiceCategory" name="category" required>
              <option value="">Select Category</option>
            </select>
          </div>
          <div class="form-group">
            <label for="editServiceName">Service Name</label>
            <input type="text" class="form-control" id="editServiceName" name="serviceName" required>
          </div>
          <div class="form-group">
            <label for="editWeight">Weight</label>
            <input type="text" class="form-control" id="editWeight" name="weight" required>
          </div>
          <div class="form-group">
            <label for="editDosage">Dosage</label>
            <input type="text" class="form-control" id="editDosage" name="dosage" required>
          </div>
          <div class="form-group">
            <label for="editPrice">Price (in Peso)</label>
            <input type="number" step="0.01" class="form-control" id="editPrice" name="price" required>
          </div>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Save Changes</button>
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        </div>
      </div>
    </form>
  </div>
</div>

<!-- jQuery and Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  (function(){
    // Function to load categories and populate dropdowns and table
    function loadCategories() {
      $.ajax({
        url: '/admin/services/categories/list',
        method: 'GET',
        dataType: 'json',
        success: function(data) {
          let options = '<option value="">Select Category</option>';
          let tableRows = '';
          let filterOptions = '<option value="">All Categories</option>';
          data.forEach(cat => {
            options += `<option value="${cat._id}">${cat.name}</option>`;
            filterOptions += `<option value="${cat._id}">${cat.name}</option>`;
            tableRows += `<tr>
                            <td>${cat.name}</td>
                            <td>
                              <button class="btn btn-sm btn-danger delete-category-btn" data-id="${cat._id}">Delete</button>
                            </td>
                          </tr>`;
          });
          $('#serviceCategory').html(options);
          $('#serviceCategoryFilter').html(filterOptions);
          $('#categoriesTable tbody').html(tableRows);
          // Also update the edit modal category dropdown
          $('#editServiceCategory').html(options);
        },
        error: function() { 
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Error loading categories.'
          });
        }
      });
    }

    // Function to load services and render the table
    function loadServices() {
      $.ajax({
        url: '/admin/services/list',
        method: 'GET',
        dataType: 'json',
        success: function(data) {
          renderServicesTable(data);
        },
        error: function() { 
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Error loading services.'
          });
        }
      });
    }

    function renderServicesTable(data) {
      const searchText = $('#serviceSearch').val().toLowerCase();
      const categoryFilter = $('#serviceCategoryFilter').val();
      let rows = '';
      data.forEach(svc => {
        if (!svc.serviceName) return;
        if (svc.serviceName.toLowerCase().indexOf(searchText) === -1) return;
        if (categoryFilter && svc.category && svc.category.toString() !== categoryFilter) return;
        rows += `<tr>
                   <td>${svc.categoryName || ''}</td>
                   <td>${svc.serviceName}</td>
                   <td>${svc.weight}</td>
                   <td>${svc.dosage}</td>
                   <td>â‚±${parseFloat(svc.price).toFixed(2)}</td>
                   <td>
                     <button class="btn btn-sm btn-info edit-service-btn" data-id="${svc._id}">Edit</button>
                     <button class="btn btn-sm btn-danger delete-service-btn" data-id="${svc._id}">Delete</button>
                   </td>
                 </tr>`;
      });
      $('#servicesTable tbody').html(rows);
    }

    // Document ready
    $(document).ready(function() {
      loadCategories();
      loadServices();

      // Add Category form submission
      $('#categoryForm').on('submit', function(e) {
        e.preventDefault();
        $.ajax({
          url: '/admin/services/categories/add',
          method: 'POST',
          data: $(this).serialize(),
          success: function(res) {
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: res.message
            });
            loadCategories();
            $('#categoryForm')[0].reset();
          },
          error: function() { 
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Error adding category.'
            });
          }
        });
      });

      // Add Service form submission
      $('#serviceForm').on('submit', function(e) {
        e.preventDefault();
        $.ajax({
          url: '/admin/services/add',
          method: 'POST',
          data: $(this).serialize(),
          success: function(res) {
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: res.message
            });
            loadServices();
            $('#serviceForm')[0].reset();
          },
          error: function() { 
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Error adding service.'
            });
          }
        });
      });

      // Filter services as user types or changes category filter
      $('#serviceSearch, #serviceCategoryFilter').on('keyup change', function() {
        loadServices();
      });

      // Delete Category with SweetAlert2 confirmation
      $(document).off('click', '.delete-category-btn').on('click', '.delete-category-btn', function() {
        let id = $(this).data('id');
        Swal.fire({
          title: 'Are you sure you want to delete this category?',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes, delete it!',
          cancelButtonText: 'Cancel'
        }).then((result) => {
          if (result.isConfirmed) {
            $.ajax({
              url: '/admin/services/categories/delete', // adjust endpoint if necessary
              method: 'POST',
              data: { id: id },
              success: function(res) {
                Swal.fire({
                  icon: 'success',
                  title: 'Deleted!',
                  text: res.message
                });
                loadCategories(); // refresh categories list
              },
              error: function() { 
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: 'Error deleting category.'
                });
              }
            });
          }
        });
      });

      // Delete service with SweetAlert2 confirmation
      $(document).off('click', '.delete-service-btn').on('click', '.delete-service-btn', function() {
        let id = $(this).data('id');
        Swal.fire({
          title: 'Are you sure you want to delete this service?',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes, delete it!',
          cancelButtonText: 'Cancel'
        }).then((result) => {
          if (result.isConfirmed) {
            $.ajax({
              url: '/admin/services/delete',
              method: 'POST',
              data: { id: id },
              success: function(res) {
                Swal.fire({
                  icon: 'success',
                  title: 'Deleted!',
                  text: res.message
                });
                loadServices();
              },
              error: function() { 
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: 'Error deleting service.'
                });
              }
            });
          }
        });
      });

      // Edit service handler
      $(document).off('click', '.edit-service-btn').on('click', '.edit-service-btn', function() {
        let id = $(this).data('id');
        $.ajax({
          url: '/admin/services/item/' + id,
          method: 'GET',
          success: function(service) {
            $('#editServiceId').val(service._id);
            $('#editServiceName').val(service.serviceName);
            $('#editWeight').val(service.weight);
            $('#editDosage').val(service.dosage);
            $('#editPrice').val(service.price);
            $('#editServiceCategory').val(service.category);
            $('#editServiceModal').modal('show');
          },
          error: function() {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Error fetching service details.'
            });
          }
        });
      });

      // Edit Service form submission
      $('#editServiceForm').on('submit', function(e) {
        e.preventDefault();
        $.ajax({
          url: '/admin/services/edit',
          method: 'POST',
          data: $(this).serialize(),
          success: function(res) {
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: res.message
            });
            $('#editServiceModal').modal('hide');
            loadServices();
          },
          error: function() { 
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Error updating service.'
            });
          }
        });
      });
    });

    // Reload services when navigating back (pageshow event)
    $(window).on('pageshow', function(e) {
      if (e.originalEvent.persisted) {
        loadServices();
      }
    });
  })();
</script>
</body>
</html>
